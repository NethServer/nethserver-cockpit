#
# 15 user_settings
#
{
    # import networks db
    use esmith::NetworksDB;

    # init db connection
    my $ndb = esmith::NetworksDB->open_ro();

    # get granted local access
    my @localAccess = $ndb->local_access_spec();
    $localAccess .= join ' ',
	map { s:/255.255.255.255::; $_ }
	    @localAccess;

    # check if user settings is enabled and redirect url is set
    if (
        ${'sssd'}{'ShellOverrideStatus'} eq 'enabled' &&
        (${'cockpit.socket'}{'UserSettingsPage'} || 'disabled') eq 'enabled' &&
        (${'cockpit.socket'}{'UserSettingsPageAlias'} || '') ne ''
    ) {
        $ProxyConf = qq(
# enable proxypass for ws and http
ProxyPreserveHost On
ProxyRequests Off

ProxyPass /cockpit/socket ws://127.0.0.1:9191/cockpit/socket
ProxyPassReverse /cockpit/socket ws://127.0.0.1:9191/socket
ProxyPass /cockpit http://127.0.0.1:9191/cockpit
ProxyPassReverse /cockpit http://127.0.0.1:9191

# handle https redirect
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^${'cockpit.socket'}{'UserSettingsPageAlias'} https://%{HTTP_HOST}${'cockpit.socket'}{'UserSettingsPageAlias'} [L,R=301]

);
        $RedirectConf = qq(

    # create redirect path to user settings
    Redirect ${'cockpit.socket'}{'UserSettingsPageAlias'} /cockpit/\@localhost/nethserver/index.html#/settings
);
        $OUT .= $ProxyConf;

        # restrict access if necessary
        $OUT .= "# enable location to restric access if necessary\n";
        $OUT .= "<Location ${'cockpit.socket'}{'UserSettingsPageAlias'} >\n";

        # check if external access is enabled
        if ((${'cockpit.socket'}{'UserSettingsGrantAccess'} || 'disabled') eq 'enabled') {
            $OUT .= "    # limit access to below ips\n";
            $OUT .= "    Require ip $localAccess";
            $OUT .= $RedirectConf;
        } else {
            $OUT .= $RedirectConf;
        }

        $OUT .= "</Location>\n";
    }
}
