#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#


use strict;
use JSON;
use esmith::ConfigDB;
use NethServer::ApiTools;

my $db = esmith::ConfigDB->open_ro();
my $groupAdmins = $db->get_prop('admins','group');

my $input = NethServer::ApiTools::readInput();
my $role = $input->{'role'} || '';
my $cmd = $input->{'action'} || '';

if ($cmd eq 'role') {
    # Specific sudo command delegation must be added in sudoers.d
    my @system = ();
    my @applications =();

    if($role eq $groupAdmins) {
        # Forward call to obtain the complete module list
        exec('/usr/libexec/nethserver/api/system-authorization/read');
    }

    my $ret = {
        'system' => \@system,
        'applications'=> \@applications,
        'status' => {'editable' => 1},
    };
    my $counter = 0;

    my @Keys = split(',', $db->get_prop('cockpit.socket','delegation')|| '');
    foreach (@Keys) {
        my @props = split(':',$_);
        if ($props[0] eq $role) {
            $counter++;
            my $group = shift(@props);
            foreach (@props) {
                next if ($_ eq 'terminal');
                push @system, $_ if ($_ !~ /^nethserver-/ );
                push @applications, $_ if ($_ =~ /^nethserver-/);
            }
            print encode_json ($ret);
            exit(0);
        } 

    }
    if ($counter == 0) { #we have no match, this role is not known
        print encode_json({"system" => [], "status" => {"editable" => 1}, "applications" => []});
    }
} else {
    NethServer::ApiTools::error();
}
