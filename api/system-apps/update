#!/usr/bin/perl

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

require "/usr/libexec/nethserver/api/lib/helper_functions.pl";

use warnings;
use strict;
use JSON;
use esmith::ConfigDB;
use File::Basename;
use MIME::Base64;

our $path = "/usr/share/cockpit/nethserver/applications/";
my $ret = {};
my $input = readInput();
my $cmd = $input->{'action'};
my $db = esmith::ConfigDB->open();

sub read_json
{
    my $file = shift;
    my $json;
    {
        local $/; #Enable 'slurp' mode
        open (my $fh, "<", $file) or die "Cannot read from Application file";
        $json = <$fh>;
        close $fh;
    }
    return decode_json($json);
}


sub has_shortcut
{
    my $app = shift;
    my $db = shift;
    my $shortcuts = $db->get_prop('cockpit.socket', 'Shortcuts') || '';
    foreach (split(",",$shortcuts)) {
        return 1 if ($_ eq $app);
    }
    return 0;
}

sub has_pin
{
    my $app = shift;
    my $db = shift;
    my $pins = $db->get_prop('cockpit.socket', 'Pins') || '';
    foreach (split(",",$pins)) {
        return 1 if ($_ eq $app);
    }
    return 0;
}

sub apply
{
    my $out = `/sbin/e-smith/expand-template /usr/share/cockpit/nethserver/manifest.json`;
    if ($? > 0) {
        error("EventFailed", "");
    } else {
        success();
    }
}

sub writeJsonToHome
{
    # 1. read Pins prop for all pinned apps
    # 2. for in pins and read /usr/share/cockpit/nethserver/applications/<Pin>.json
    # 3. push object parse in JSON to FinalArray (final array contains all json pinned apps)
    # 4. write FinalArray object to JSON in /var/www/html/applications.json
    
    my $pins = $db->get_prop('cockpit.socket', 'Pins') || '';
    my @appArray;

    foreach (split(",",$pins)) {
        my $appPath = "/usr/share/cockpit/nethserver/applications/$_.json";
        open(my $fn, '<', $appPath) or die("Cannot read $_.json");
        sysread($fn, my $result, -s $fn);
        close $fn;

        my $json = decode_json($result);

        # read and convert to base64 -> /usr/share/cockpit/nethserver-mail/logo.png
        open (IMAGE, "/usr/share/cockpit/$_/logo.png") or die("Error converting icon in base64");
        my $rawString = do{ local $/ = undef; <IMAGE>; };
        my $base64 = encode_base64( $rawString );

        # create new field in object: icon_base64
        my ($key, $val) = ('icon_base64', "data:image/png;base64,$base64");
        $json->{$key} = $val;

        push @appArray, $json;
    }

    my $jsonFileName = "/usr/share/httpd/noindex/res/applications.json";
    open(my $fh, '>', $jsonFileName) or die("Cannot read from pinned applications file");
    print $fh encode_json(\@appArray);
    close $fh;

    if ($< != 0) {
        error()
    }else {
        success();
    }
}

if($cmd eq 'remove-shortcut') {

    my $app = $input->{'name'};
    if (has_shortcut($app, $db)) {
        my $shortcuts = $db->get_prop('cockpit.socket', 'Shortcuts') || '';
        my @tmp = split(",",$shortcuts);
        @tmp = grep(!/^$app$/, @tmp);
        $db->set_prop('cockpit.socket', 'Shortcuts', join(",",@tmp));
    }
    apply();

} elsif ($cmd eq 'add-shortcut') {
    my $app = $input->{'name'};
    if (!has_shortcut($app, $db)) {
        my $shortcuts = $db->get_prop('cockpit.socket', 'Shortcuts') || '';
        my @tmp = split(",",$shortcuts);
        push(@tmp, $app);
        $db->set_prop('cockpit.socket', 'Shortcuts', join(",",@tmp));
    }
    apply();

}elsif ($cmd eq 'add-pin'){
    my $app = $input->{'name'};
    if (!has_pin($app, $db)) {
        my $pins = $db->get_prop('cockpit.socket', 'Pins') || '';
        my @tmp = split(",",$pins);
        push(@tmp, $app);
        $db->set_prop('cockpit.socket', 'Pins', join(",",@tmp));
    }
    writeJsonToHome();	
    

} elsif ($cmd eq 'remove-pin'){
    my $app = $input->{'name'};
    if (has_pin($app, $db)) {
        my $pins = $db->get_prop('cockpit.socket', 'Pins') || '';
        my @tmp = split(",",$pins);
        @tmp = grep(!/^$app$/, @tmp);
        $db->set_prop('cockpit.socket', 'Pins', join(",",@tmp));
    }
    writeJsonToHome();

}else {
    error();
}
