#!/usr/bin/php
<?php
/*
 * Copyright (C) 2019 Nethesis S.r.l.
 * http://www.nethesis.it - nethserver@nethesis.it
 *
 * This script is part of NethServer.
 *
 * NethServer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License,
 * or any later version.
 *
 * NethServer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with NethServer.  If not, see COPYING.
 */

/** Include common functions **/

require_once("/usr/libexec/nethserver/api/lib/users_functions.php");

$data = readInput();
$v = new LegacyValidator($data);

check_password($data, $v);

if (!$v->validate()) {
    error($v);
}

# Make private temp files:
umask(077);

# Use pwquality helper
$tmpFilePath = @tempnam(sys_get_temp_dir(), 'ng-');
$tmpFile = fopen($tmpFilePath, 'w');
fwrite($tmpFile, $data['currentPassword']."\n");
fwrite($tmpFile, $data['newPassword']."\n");
fclose($tmpFile);
exec("/usr/libexec/nethserver/api/system-password/check-pwquality $tmpFilePath", $out, $ret);
unlink($tmpFilePath);

if ($ret > 0) {
    $error = array(
        "id" => time(),
        "type" => 'NotValid',
        "message" => "validation_failed",
        "attributes" => array(array("parameter" => "newPassword", "value" => $data['newPassword'], "error" => implode("\n",$out)))
    );

    echo json_encode($error);
    exit(1);
}

success();
