#!/usr/bin/perl

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use warnings;
use strict;
use esmith::ConfigDB;
use JSON;
use URI;

my $db = esmith::ConfigDB->open_ro();

my $ret = {};

my $pricing = $db->get_prop('subscription','PricingUrl');
my $portal = URI->new($pricing);
my $id = $db->get_prop('subscription','SystemId');
my $secret = $db->get_prop('subscription','Secret');
my $enterprise = ($portal->host =~ m/nethesis/) ? 1 : 0;

if ( $secret ) {
    my $out = `/usr/libexec/nethserver/subscription-info $secret`;
    $ret->{'status'} = decode_json($out);
} else {
    $ret->{'status'} = undef;
}

my $url = $portal->scheme."://".$portal->host."/";
if (defined($ret->{'status'}{'id'})) {
    if ( $portal->host =~ m/nethesis/ ) {
        $url .= "#/server/".$ret->{'status'}{'id'};
    } else {
        $url .= "servers/".$ret->{'status'}{'id'};
    }
}

my $site_url = $db->get_prop('subscription','SiteUrl');
my $docs_url = $db->get_prop('subscription','DocsUrl');
my $helpdesk_url = $db->get_prop('subscription','HelpdeskUrl');

$ret->{'configuration'} = { 'PortalURL' => $url, 'PricingUrl' => $pricing, 'SystemId' => $id, 'enterprise' => $enterprise, 'SiteUrl' => $site_url, 'DocsUrl' => $docs_url, 'HelpdeskUrl' => $helpdesk_url };

my $product_name = $db->get_prop('sysconfig','ProductName');
$ret->{'product_name'} = $product_name;

$ret->{'support'} = undef;
if (-f "/usr/bin/don") {
    my $out = `/usr/bin/don status`;
    my $server = $db->get_prop('don','ServerName');
    my $cred_file = '/run/don/credentials';
    my $session = '';
    $ret->{'support'} = { status => 'disabled', server => $server, 'sessionid' => $session };
    if ($? == 0 && -f $cred_file) {
        open my $fh, "<", $cred_file;
        my @lines = <$fh>;
        close $fh;
        $session = $lines[1];
        chomp $session;

        $ret->{'support'}{'sessionid'} = $session;
        $ret->{'support'}{'status'} = 'enabled';
    }
}

print encode_json($ret);
