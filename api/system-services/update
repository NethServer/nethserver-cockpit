#!/bin/bash

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

. /usr/libexec/nethserver/api/lib/helper_functions

data=$(cat /dev/stdin)
service=$(echo $data | jq -r '.name')
action=$(echo $data | jq -r '.action')

case $action in
    "stop")
        systemctl stop $service 2>/dev/null
        ;;

    "start")
        systemctl start $service 2>/dev/null
        ;;

    "restart")
        systemctl restart $service 2>/dev/null
        ;;
    
    "enable")
        /sbin/e-smith/config setprop $service status enabled
        /sbin/e-smith/signal-event -j runlevel-adjust
        ;;

    "disable")
        /sbin/e-smith/config setprop $service status disabled
        /sbin/e-smith/signal-event -j runlevel-adjust
        ;;

    "edit")
        service=$(echo $data | jq -r '.serviceName')
        access=$(echo $data | jq -r '.access | join(",")')
        custom=$(echo $data | jq -r '.custom')

        if [ "$custom" = "1" ]; then
            # tcp/udp ports can be changed for custom services only

            tcpPorts=$(echo $data | jq -r '.tcpPorts | join(",")')
            udpPorts=$(echo $data | jq -r '.udpPorts | join(",")')

            if [ -n "$tcpPorts" ]; then
                /sbin/e-smith/config setprop $service TCPPorts $tcpPorts
                check_exit_status
            else
                /sbin/e-smith/config delprop $service TCPPort TCPPorts
                check_exit_status
            fi

            if [ -n "$udpPorts" ]; then
                /sbin/e-smith/config setprop $service UDPPorts $udpPorts
                check_exit_status
            else
                /sbin/e-smith/config delprop $service UDPPort UDPPorts
                check_exit_status
            fi
        fi

        if [ -n "$access" ]; then
            /sbin/e-smith/config setprop $service access $access
            check_exit_status
        else
            /sbin/e-smith/config delprop $service access
            check_exit_status
        fi

        /sbin/e-smith/signal-event -j firewall-adjust
        check_exit_status

        success
        ;;
esac

if [ $? -gt 0 ]; then
    error "EventFailed" "Action failed"
else
    success
fi
