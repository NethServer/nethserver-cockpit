#!/usr/bin/python

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

# List all available YUM groups, it honors NsReleaseLock property.

import yum
import os
import subprocess
import sys
import simplejson
import yum.misc


def compsdump(yb):
    groups = []
    categories = []

    installed_packages = map(lambda p: p.name, yb.doRpmDBSetup())
    package_state = lambda p: (p, p in installed_packages)
    installed_groups, available_groups = yb.doGroupLists()

    for g in yb.comps.get_groups():
        if not g.user_visible:
            continue
        tmp = {
            'id' : g.groupid,
            'name' : g.ui_name,
            'installed': g in installed_groups,
            'description' : g.ui_description,
            'mandatory_packages': dict(map(package_state, g.mandatory_packages.keys())),
            'optional_packages': dict(map(package_state, g.optional_packages.keys())),
            'default_packages' : dict(map(package_state, g.default_packages.keys())),
            'conditional_packages': dict(map(package_state, g.conditional_packages.keys()))
        }
        groups.append(tmp)        

    for c in yb.comps.get_categories():
        # hide server-manager related packages
        if c.categoryid == "server-manager-languages":
            continue;
        categories.append({
            'id': c.categoryid,
            'name': c.ui_name,
            'description': c.ui_description,
            'groups': c.groups,
        })

    for g in groups:
        for c in categories:
            if g['id'] in c['groups']:
                g['category'] = c['id']

    print( simplejson.dumps({'categories' : categories, 'groups': groups}) )


def parse_pkginfo_conf():
    repos = []
    try:
        f = open('/etc/nethserver/pkginfo.conf')
        for l in f.read().split("\n"):
            if l != '' and l[0] != '#':
                repos.append(l.strip())
        f.close()
    except Exception, e:
        sys.stderr.write("Could not parse pkginfo.conf file: %s" % str(e))

    return repos

def is_strict_updates():
    lock = subprocess.check_output(['/sbin/e-smith/config', 'getprop', 'sysconfig', 'NsReleaseLock'])
    return lock.strip() == 'enabled'

def main():
    try:
        yum.misc.setup_locale()

        ypbc = yum._YumPreBaseConf()
        ypbc.debuglevel = 0
        ypbc.errorlevel = 0
        ypbc.init_plugins = False
        yb = yum.YumBase()
        yb.preconf = ypbc

        # force repository configuration now,
        # it will not work if invoked after listGroupsEnabled()
        if is_strict_updates():
            yb.conf.reposdir = '/etc/nethserver/yum-update.d/'

        for r in yb.repos.listGroupsEnabled():
            if not r.id in parse_pkginfo_conf():
                r.enablegroups = 0

        compsdump(yb)


    except Exception, e:
        print simplejson.dumps({'error':"%s"%e})
        sys.exit(1)


if __name__ == "__main__":
    main()

